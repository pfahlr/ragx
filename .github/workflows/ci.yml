name: ci
on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Python runtime
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"   # built-in pip cache keyed on requirements.txt

      # Cache for CMake build artifacts
      - name: Cache CMake build
        uses: actions/cache@v4
        with:
          path: build
          key: cmake-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            cmake-${{ runner.os }}-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          # Ensure pybind11 is present
          pip install pybind11 || true
          # Dev tools
          pip install ruff mypy pytest coverage yamllint || true

      - name: Export pybind11_DIR
        run: |
          echo "pybind11_DIR=$(python -m pybind11 --cmakedir)" >> $GITHUB_ENV
          echo "Using pybind11_DIR=$pybind11_DIR"

      - name: Install C++ toolchain
        if: ${{ hashFiles('**/CMakeLists.txt') != '' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build g++ make

      - name: Configure CMake (native build)
        if: ${{ hashFiles('**/CMakeLists.txt') != '' }}
        env:
          pybind11_DIR: ${{ env.pybind11_DIR }}
        run: |
          cmake -S ./cpp -B build \
            -G Ninja \
            -Dpybind11_DIR="$pybind11_DIR" \
            -DPYBIND11_FINDPYTHON=ON

      - name: Build (native)
        if: ${{ hashFiles('**/CMakeLists.txt') != '' }}
        run: cmake --build build -- -j"$(nproc)"

      # Lint / type / tests
      - name: Ruff
        run: ruff check . || true

      - name: MyPy
        run: mypy . || true

      - name: PyTest
        run: pytest --maxfail=1 --disable-warnings || true
